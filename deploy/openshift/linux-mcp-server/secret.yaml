apiVersion: v1
kind: Secret
metadata:
  name: linux-mcp-ssh-keys
  namespace: rhel-mcp
  labels:
    app: linux-mcp-server
    component: ssh-keys
type: Opaque
data:
  # Base64-encoded SSH private key
  # Generate with: base64 -w 0 ~/.ssh/id_ed25519
  # 
  # IMPORTANT: Replace this with your actual SSH private key
  # Example command to create secret:
  #   oc create secret generic linux-mcp-ssh-keys \
  #     --from-file=id_ed25519=/path/to/your/private/key \
  #     --namespace=rhel-mcp
  #
  # For multiple keys:
  #   oc create secret generic linux-mcp-ssh-keys \
  #     --from-file=id_ed25519=/path/to/key1 \
  #     --from-file=prod-key=/path/to/key2 \
  #     --from-file=dev-key=/path/to/key3 \
  #     --namespace=rhel-mcp
  #
  # Uncomment and add your base64-encoded key:
  # id_ed25519: LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K...
---
# Alternative: Use SealedSecret for GitOps workflows
# apiVersion: bitnami.com/v1alpha1
# kind: SealedSecret
# metadata:
#   name: linux-mcp-ssh-keys
#   namespace: rhel-mcp
# spec:
#   encryptedData:
#     id_ed25519: AgA...  # Encrypted with kubeseal

