name: Build and Push Linux MCP Server to GHCR

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '.dockerignore'
      - 'pyproject.toml'
      - 'uv.lock'
      - 'src/**'
      - 'hosts.example.yaml'
      - '.github/workflows/build-and-publish-ghcr.yml'
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up image tags
        id: meta
        run: |
          # Generate tags: latest, git SHA, and version if available
          IMAGE_BASE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          TAGS="${IMAGE_BASE}:latest,${IMAGE_BASE}:${{ github.sha }}"
          
          # If this is a version tag (v1.2.3), add semantic version tags
          if [[ "${{ github.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            TAGS="${TAGS},${IMAGE_BASE}:${VERSION}"
            TAGS="${TAGS},${IMAGE_BASE}:v${VERSION}"
          fi
          
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "image_base=${IMAGE_BASE}" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container image
        run: |
          # Build the image
          IMAGE_TAGS="${{ steps.meta.outputs.tags }}"
          
          # Split tags into array
          IFS=',' read -ra TAG_ARRAY <<< "$IMAGE_TAGS"
          
          # Build with first tag
          echo "🔨 Building image with tag: ${TAG_ARRAY[0]}"
          podman build \
            --file Dockerfile \
            --tag "${TAG_ARRAY[0]}" \
            --label "org.opencontainers.image.source=https://github.com/${{ github.repository }}" \
            --label "org.opencontainers.image.revision=${{ github.sha }}" \
            --label "org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            --label "org.opencontainers.image.title=Linux MCP Server" \
            --label "org.opencontainers.image.description=MCP server for read-only Linux system administration and diagnostics on RHEL-based systems" \
            --label "org.opencontainers.image.vendor=RHEL Lightspeed" \
            .
          
          # Tag with additional tags
          for tag in "${TAG_ARRAY[@]:1}"; do
            echo "🏷️  Tagging image: ${tag}"
            podman tag "${TAG_ARRAY[0]}" "${tag}"
          done
          
          # Push all tags
          for tag in "${TAG_ARRAY[@]}"; do
            echo "📤 Pushing image: ${tag}"
            podman push "${tag}"
          done

      - name: Output image details
        run: |
          echo "✅ Successfully built and pushed Linux MCP Server images:"
          echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' | while read tag; do
            echo "  📦 ${tag}"
          done
          
          echo ""
          echo "🚀 To pull the image:"
          echo "  podman pull ${{ steps.meta.outputs.image_base }}:latest"
          echo ""
          echo "🔗 View on GHCR:"
          echo "  https://github.com/${{ github.repository }}/pkgs/container/$(basename ${{ github.repository }})"
          echo ""
          echo "🐳 To run the container:"
          echo "  podman run -d -p 8000:8000 -v ./hosts.yaml:/app/config/hosts.yaml:ro -v ~/.ssh/id_rsa:/app/ssh-keys/id_rsa:ro ${{ steps.meta.outputs.image_base }}:latest"

