name: Build and Push to GHCR

on:
  push:
    branches:
      - main
      - feature/openshift-deployment
    paths:
      - 'Dockerfile'
      - '.dockerignore'
      - 'pyproject.toml'
      - 'uv.lock'
      - 'src/**'
      - 'hosts.example.yaml'
      - '.github/workflows/build-and-publish-ghcr.yml'
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: rrbanda
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container image
        run: |
          IMAGE_NAME=ghcr.io/rrbanda/linux-mcp-server:latest
          IMAGE_SHA=ghcr.io/rrbanda/linux-mcp-server:${{ github.sha }}
          
          echo "ðŸ”¨ Building image: $IMAGE_NAME"
          podman build -f Dockerfile -t $IMAGE_NAME -t $IMAGE_SHA .
          
          echo "ðŸ“¤ Pushing images to GHCR..."
          podman push $IMAGE_NAME
          podman push $IMAGE_SHA
          
          echo "âœ… Successfully built and pushed Linux MCP Server images:"
          echo "  ðŸ“¦ $IMAGE_NAME"
          echo "  ðŸ“¦ $IMAGE_SHA"

      - name: Make package public
        run: |
          echo "ðŸ”“ Making GHCR package public..."
          
          PACKAGE_NAME="linux-mcp-server"
          
          # Update package visibility to public
          curl -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/user/packages/container/${PACKAGE_NAME} \
            -d '{"visibility":"public"}' || echo "Note: Package might already be public or need repo admin permissions"
          
          echo ""
          echo "ðŸ”— View on GHCR: https://github.com/rrbanda/linux-mcp-server/pkgs/container/linux-mcp-server"

